package com.example.Trustifyrest;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class Trustify extends Contract {
    public static final String BINARY = "60806040523480156200001157600080fd5b5060405162004051380380620040518339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b613f27806200012a6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063932dd7b21161005b578063932dd7b214610115578063bba27d9114610146578063e3a6e26d14610162578063fd687f4f1461017e5761007d565b80631fc44b19146100825780632251c715146100b25780634f1d5bce146100e4575b600080fd5b61009c60048036038101906100979190612817565b6101ae565b6040516100a9919061285f565b60405180910390f35b6100cc60048036038101906100c791906128b0565b610bb7565b6040516100db93929190612bcb565b60405180910390f35b6100fe60048036038101906100f99190612c17565b61118e565b60405161010c929190612c6a565b60405180910390f35b61012f600480360381019061012a9190612817565b611679565b60405161013d929190612cfa565b60405180910390f35b610160600480360381019061015b9190612e8b565b611872565b005b61017c60048036038101906101779190612efa565b612018565b005b61019860048036038101906101939190612817565b612253565b6040516101a59190612ff8565b60405180910390f35b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905090506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490509050600081836102519190613049565b90506002811015610297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028e906130ef565b60405180910390fd5b60006040518060600160405280604051806020016040528060008152508152602001600060ff16815260200160011515815250905080600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610361919061331b565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555090505080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161043b919061331b565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff021916908315150217905550905050838061048b906133ed565b9450508280610499906133ed565b935050600080851115610757575b84811161075257600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001818154811061050257610501613416565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361073f5760008190505b6001866105729190613445565b81116106b257600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016001826105c79190613049565b815481106105d8576105d7613416565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001828154811061065757610656613416565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806106aa90613479565b915050610565565b50600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480610705576107046134c1565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610752565b808061074a90613479565b9150506104a7565b6107df565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054806107a9576107a86134c1565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b84811115610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081990613562565b60405180910390fd5b600080851115610add575b848111610ad857600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001818154811061088857610887613416565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1603610ac55760008190505b6001866108f89190613445565b8111610a3857600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160018261094d9190613049565b8154811061095e5761095d613416565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000182815481106109dd576109dc613416565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610a3090613479565b9150506108eb565b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480610a8b57610a8a6134c1565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610ad8565b8080610ad090613479565b91505061082d565b610b65565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480610b2f57610b2e6134c1565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b84811115610ba8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9f906135f4565b60405180910390fd5b60019650505050505050919050565b60608060606000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050905060008111610c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4090613686565b60405180910390fd5b8080610c54906133ed565b91505080861115610c9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9190613718565b60405180910390fd5b84861115610cdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd4906137aa565b60405180910390fd5b60198686610ceb9190613445565b1115610d2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d239061383c565b60405180910390fd5b80851115610d38578094505b600060018787610d489190613445565b610d529190613049565b905060008167ffffffffffffffff811115610d7057610d6f612d34565b5b604051908082528060200260200182016040528015610da357816020015b6060815260200190600190039081610d8e5790505b50905060008267ffffffffffffffff811115610dc257610dc1612d34565b5b604051908082528060200260200182016040528015610df05781602001602082028036833780820191505090505b50905060008367ffffffffffffffff811115610e0f57610e0e612d34565b5b604051908082528060200260200182016040528015610e3d5781602001602082028036833780820191505090505b50905060008060018c88610e519190613445565b610e5b9190613049565b90505b60018b88610e6c9190613445565b610e769190613049565b8110611177576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600101600082600001600185610ed69190613445565b81548110610ee757610ee6613416565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610f5a9061313e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f869061313e565b8015610fd35780601f10610fa857610100808354040283529160200191610fd3565b820191906000526020600020905b815481529060010190602001808311610fb657829003601f168201915b5050505050868481518110610feb57610fea613416565b5b60200260200101819052508060010160008260000160018561100d9190613445565b8154811061101e5761101d613416565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff168584815181106110a7576110a6613416565b5b602002602001019060ff16908160ff1681525050806000016001836110cc9190613445565b815481106110dd576110dc613416565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684848151811061111b5761111a613416565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828061116090613479565b93505050808061116f906133ed565b915050610e5e565b508383839850985098505050505050509250925092565b6060806000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905090506000811161121e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611215906138ce565b60405180910390fd5b8080611229906133ed565b9150508086111561126f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126690613718565b60405180910390fd5b848611156112b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a9906137aa565b60405180910390fd5b601986866112c09190613445565b1115611301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f89061383c565b60405180910390fd5b8085111561130d578094505b60006001878761131d9190613445565b6113279190613049565b905060008167ffffffffffffffff81111561134557611344612d34565b5b60405190808252806020026020018201604052801561137857816020015b60608152602001906001900390816113635790505b50905060008267ffffffffffffffff81111561139757611396612d34565b5b6040519080825280602002602001820160405280156113c55781602001602082028036833780820191505090505b50905060008060018b876113d99190613445565b6113e39190613049565b90505b60018a876113f49190613445565b6113fe9190613049565b8110611665576000600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160008260000160018561145e9190613445565b8154811061146f5761146e613416565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546114e29061313e565b80601f016020809104026020016040519081016040528092919081815260200182805461150e9061313e565b801561155b5780601f106115305761010080835404028352916020019161155b565b820191906000526020600020905b81548152906001019060200180831161153e57829003601f168201915b505050505085848151811061157357611572613416565b5b6020026020010181905250806001016000826000016001856115959190613445565b815481106115a6576115a5613416565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1684848151811061162f5761162e613416565b5b602002602001019060ff16908160ff1681525050828061164e90613479565b93505050808061165d906133ed565b9150506113e6565b508282965096505050505050935093915050565b6060600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16905060008160ff1603611756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174d90613960565b60405180910390fd5b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546117e59061313e565b80601f01602080910402602001604051908101604052809291908181526020018280546118119061313e565b801561185e5780601f106118335761010080835404028352916020019161185e565b820191906000526020600020905b81548152906001019060200180831161184157829003601f168201915b505050505090508082935093505050915091565b82600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16611942576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611939906139f2565b60405180910390fd5b60008260ff16118015611959575060058260ff1611155b611998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198f90613a84565b60405180910390fd5b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054611a349061313e565b80601f0160208091040260200160405190810160405280929190818152602001828054611a609061313e565b8015611aad5780601f10611a8257610100808354040283529160200191611aad565b820191906000526020600020905b815481529060010190602001808311611a9057829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900460ff16151515158152505090506000816020015160ff16148015611b0c57506000816000015151145b15611e3657600060405180606001604052808681526020018560ff16815260200160011515815250905080600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611bcb919061331b565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff021916908315150217905550905050600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611d48919061331b565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff021916908315150217905550905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001869080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050612011565b600060405180606001604052808681526020018560ff16815260200160011515815250905080600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611ef0919061331b565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555090505080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611fca919061331b565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff021916908315150217905550905050505b5050505050565b808060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401612075929190613ab3565b602060405180830381865afa158015612092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b69190613af1565b10156120f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ee90613b6a565b60405180910390fd5b6040518060600160405280604051806020016040528060008152508152602001600060ff16815260200160011515815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816121bc919061331b565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555090505061224e33848460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612488909392919063ffffffff16565b505050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490509050600081036122e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d990613c22565b60405180910390fd5b60008167ffffffffffffffff8111156122fe576122fd612d34565b5b60405190808252806020026020018201604052801561232c5781602001602082028036833780820191505090505b50905060005b8281101561247d57600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000183815481106123d2576123d1613416565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1660ff1682828151811061245e5761245d613416565b5b602002602001018181525050808061247590613479565b915050612332565b508092505050919050565b61250b846323b872dd60e01b8585856040516024016124a993929190613c51565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612511565b50505050565b6000612573826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166125d89092919063ffffffff16565b90506000815111156125d357808060200190518101906125939190613cb4565b6125d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125c990613d53565b60405180910390fd5b5b505050565b60606125e784846000856125f0565b90509392505050565b606082471015612635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161262c90613de5565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161265e9190613e4c565b60006040518083038185875af1925050503d806000811461269b576040519150601f19603f3d011682016040523d82523d6000602084013e6126a0565b606091505b50915091506126b1878383876126bd565b92505050949350505050565b6060831561271f576000835103612717576126d785612732565b612716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161270d90613eaf565b60405180910390fd5b5b82905061272a565b6127298383612755565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156127685781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161279c9190613ecf565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006127e4826127b9565b9050919050565b6127f4816127d9565b81146127ff57600080fd5b50565b600081359050612811816127eb565b92915050565b60006020828403121561282d5761282c6127af565b5b600061283b84828501612802565b91505092915050565b60008115159050919050565b61285981612844565b82525050565b60006020820190506128746000830184612850565b92915050565b6000819050919050565b61288d8161287a565b811461289857600080fd5b50565b6000813590506128aa81612884565b92915050565b600080604083850312156128c7576128c66127af565b5b60006128d58582860161289b565b92505060206128e68582860161289b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561295657808201518184015260208101905061293b565b60008484015250505050565b6000601f19601f8301169050919050565b600061297e8261291c565b6129888185612927565b9350612998818560208601612938565b6129a181612962565b840191505092915050565b60006129b88383612973565b905092915050565b6000602082019050919050565b60006129d8826128f0565b6129e281856128fb565b9350836020820285016129f48561290c565b8060005b85811015612a305784840389528151612a1185826129ac565b9450612a1c836129c0565b925060208a019950506001810190506129f8565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060ff82169050919050565b612a8481612a6e565b82525050565b6000612a968383612a7b565b60208301905092915050565b6000602082019050919050565b6000612aba82612a42565b612ac48185612a4d565b9350612acf83612a5e565b8060005b83811015612b00578151612ae78882612a8a565b9750612af283612aa2565b925050600181019050612ad3565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612b42816127d9565b82525050565b6000612b548383612b39565b60208301905092915050565b6000602082019050919050565b6000612b7882612b0d565b612b828185612b18565b9350612b8d83612b29565b8060005b83811015612bbe578151612ba58882612b48565b9750612bb083612b60565b925050600181019050612b91565b5085935050505092915050565b60006060820190508181036000830152612be581866129cd565b90508181036020830152612bf98185612aaf565b90508181036040830152612c0d8184612b6d565b9050949350505050565b600080600060608486031215612c3057612c2f6127af565b5b6000612c3e8682870161289b565b9350506020612c4f8682870161289b565b9250506040612c6086828701612802565b9150509250925092565b60006040820190508181036000830152612c8481856129cd565b90508181036020830152612c988184612aaf565b90509392505050565b600082825260208201905092915050565b6000612cbd8261291c565b612cc78185612ca1565b9350612cd7818560208601612938565b612ce081612962565b840191505092915050565b612cf481612a6e565b82525050565b60006040820190508181036000830152612d148185612cb2565b9050612d236020830184612ceb565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612d6c82612962565b810181811067ffffffffffffffff82111715612d8b57612d8a612d34565b5b80604052505050565b6000612d9e6127a5565b9050612daa8282612d63565b919050565b600067ffffffffffffffff821115612dca57612dc9612d34565b5b612dd382612962565b9050602081019050919050565b82818337600083830152505050565b6000612e02612dfd84612daf565b612d94565b905082815260208101848484011115612e1e57612e1d612d2f565b5b612e29848285612de0565b509392505050565b600082601f830112612e4657612e45612d2a565b5b8135612e56848260208601612def565b91505092915050565b612e6881612a6e565b8114612e7357600080fd5b50565b600081359050612e8581612e5f565b92915050565b600080600060608486031215612ea457612ea36127af565b5b6000612eb286828701612802565b935050602084013567ffffffffffffffff811115612ed357612ed26127b4565b5b612edf86828701612e31565b9250506040612ef086828701612e76565b9150509250925092565b60008060408385031215612f1157612f106127af565b5b6000612f1f85828601612802565b9250506020612f308582860161289b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612f6f8161287a565b82525050565b6000612f818383612f66565b60208301905092915050565b6000602082019050919050565b6000612fa582612f3a565b612faf8185612f45565b9350612fba83612f56565b8060005b83811015612feb578151612fd28882612f75565b9750612fdd83612f8d565b925050600181019050612fbe565b5085935050505092915050565b600060208201905081810360008301526130128184612f9a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006130548261287a565b915061305f8361287a565b92508282019050808211156130775761307661301a565b5b92915050565b7f4572726f722c20796f7520646f6e27742068617665206120726576696577207460008201527f6f2064656c657465000000000000000000000000000000000000000000000000602082015250565b60006130d9602883612ca1565b91506130e48261307d565b604082019050919050565b60006020820190508181036000830152613108816130cc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061315657607f821691505b6020821081036131695761316861310f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026131d17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613194565b6131db8683613194565b95508019841693508086168417925050509392505050565b6000819050919050565b600061321861321361320e8461287a565b6131f3565b61287a565b9050919050565b6000819050919050565b613232836131fd565b61324661323e8261321f565b8484546131a1565b825550505050565b600090565b61325b61324e565b613266818484613229565b505050565b5b8181101561328a5761327f600082613253565b60018101905061326c565b5050565b601f8211156132cf576132a08161316f565b6132a984613184565b810160208510156132b8578190505b6132cc6132c485613184565b83018261326b565b50505b505050565b600082821c905092915050565b60006132f2600019846008026132d4565b1980831691505092915050565b600061330b83836132e1565b9150826002028217905092915050565b6133248261291c565b67ffffffffffffffff81111561333d5761333c612d34565b5b613347825461313e565b61335282828561328e565b600060209050601f8311600181146133855760008415613373578287015190505b61337d85826132ff565b8655506133e5565b601f1984166133938661316f565b60005b828110156133bb57848901518255600182019150602085019450602081019050613396565b868310156133d857848901516133d4601f8916826132e1565b8355505b6001600288020188555050505b505050505050565b60006133f88261287a565b91506000820361340b5761340a61301a565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006134508261287a565b915061345b8361287a565b92508282039050818111156134735761347261301a565b5b92915050565b60006134848261287a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036134b6576134b561301a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f556e6b6e6f77206572726f7220647572696e672064656c6574696f6e206f662060008201527f637573746f6d6572206164647265737320726576696577000000000000000000602082015250565b600061354c603783612ca1565b9150613557826134f0565b604082019050919050565b6000602082019050818103600083015261357b8161353f565b9050919050565b7f556e6b6e6f77206572726f7220647572696e672064656c6574696f6e206f662060008201527f636f6d70616e7920616464726573732072657669657700000000000000000000602082015250565b60006135de603683612ca1565b91506135e982613582565b604082019050919050565b6000602082019050818103600083015261360d816135d1565b9050919050565b7f596f752068617665206e6f742072656c656173656420616e792072657669657760008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000613670602183612ca1565b915061367b82613614565b604082019050919050565b6000602082019050818103600083015261369f81613663565b9050919050565b7f5374617274206d757374206265206c657373207468616e20746865206c656e6760008201527f7468206f66207468652061727261790000000000000000000000000000000000602082015250565b6000613702602f83612ca1565b915061370d826136a6565b604082019050919050565b60006020820190508181036000830152613731816136f5565b9050919050565b7f5374617274206e756d626572206d757374206265206c657373207468616e206560008201527f6e64000000000000000000000000000000000000000000000000000000000000602082015250565b6000613794602283612ca1565b915061379f82613738565b604082019050919050565b600060208201905081810360008301526137c381613787565b9050919050565b7f596f752063616e20676574206d6178203235207265766965777320706572206360008201527f616c6c0000000000000000000000000000000000000000000000000000000000602082015250565b6000613826602383612ca1565b9150613831826137ca565b604082019050919050565b6000602082019050818103600083015261385581613819565b9050919050565b7f5468697320636f6d70616e792068617665206e6f74207265636569766564206160008201527f6e79207265766965777300000000000000000000000000000000000000000000602082015250565b60006138b8602a83612ca1565b91506138c38261385c565b604082019050919050565b600060208201905081810360008301526138e7816138ab565b9050919050565b7f596f752068617665206e6f742072656c656173656420616e792072657669657760008201527f7320746f20746869732061646472657373000000000000000000000000000000602082015250565b600061394a603183612ca1565b9150613955826138ee565b604082019050919050565b600060208201905081810360008301526139798161393d565b9050919050565b7f596f7520646f6e7420686176652061207472616e736c616374696f6e2066726f60008201527f6d20796f7572206164647265737320746f207468697320616464726573730000602082015250565b60006139dc603e83612ca1565b91506139e782613980565b604082019050919050565b60006020820190508181036000830152613a0b816139cf565b9050919050565b7f4572726f722c207374617273206d75737420626520612076616c75652062657460008201527f7765656e203020616e6420350000000000000000000000000000000000000000602082015250565b6000613a6e602c83612ca1565b9150613a7982613a12565b604082019050919050565b60006020820190508181036000830152613a9d81613a61565b9050919050565b613aad816127d9565b82525050565b6000604082019050613ac86000830185613aa4565b613ad56020830184613aa4565b9392505050565b600081519050613aeb81612884565b92915050565b600060208284031215613b0757613b066127af565b5b6000613b1584828501613adc565b91505092915050565b7f4572726f72207769746820746f6b656e20616c6c6f77616e6365000000000000600082015250565b6000613b54601a83612ca1565b9150613b5f82613b1e565b602082019050919050565b60006020820190508181036000830152613b8381613b47565b9050919050565b7f5468697320636f6d70616e7920686173206e6f7420726563656976656420616e60008201527f7920726576696577732c2063616e6e6f742063616c63756c617465206176657260208201527f6167652073746172730000000000000000000000000000000000000000000000604082015250565b6000613c0c604983612ca1565b9150613c1782613b8a565b606082019050919050565b60006020820190508181036000830152613c3b81613bff565b9050919050565b613c4b8161287a565b82525050565b6000606082019050613c666000830186613aa4565b613c736020830185613aa4565b613c806040830184613c42565b949350505050565b613c9181612844565b8114613c9c57600080fd5b50565b600081519050613cae81613c88565b92915050565b600060208284031215613cca57613cc96127af565b5b6000613cd884828501613c9f565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613d3d602a83612ca1565b9150613d4882613ce1565b604082019050919050565b60006020820190508181036000830152613d6c81613d30565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000613dcf602683612ca1565b9150613dda82613d73565b604082019050919050565b60006020820190508181036000830152613dfe81613dc2565b9050919050565b600081519050919050565b600081905092915050565b6000613e2682613e05565b613e308185613e10565b9350613e40818560208601612938565b80840191505092915050565b6000613e588284613e1b565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613e99601d83612ca1565b9150613ea482613e63565b602082019050919050565b60006020820190508181036000830152613ec881613e8c565b9050919050565b60006020820190508181036000830152613ee98184612cb2565b90509291505056fea264697066735822122026ae0b4f9f29c8f15e5568b910c3a9ac2fbf588fb19bba6d0350332f757d23f264736f6c63430008110033";

    public static final String FUNC_DELETEREVIEW = "DeleteReview";

    public static final String FUNC_DEPOSITTOKENS = "DepositTokens";

    public static final String FUNC_GETAVERAGESTARS = "GetAverageStars";

    public static final String FUNC_GETNCOMPANYREVIEW = "GetNCompanyReview";

    public static final String FUNC_GETNMYREVIEW = "GetNMyReview";

    public static final String FUNC_GETSPECIFICREVIEW = "GetSpecificReview";

    public static final String FUNC_WRITEAREVIEW = "WriteAReview";

    @Deprecated
    protected Trustify(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Trustify(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Trustify(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Trustify(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> DeleteReview(String addressToReview) {
        final Function function = new Function(
                FUNC_DELETEREVIEW, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addressToReview)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> DepositTokens(String addressToDeposit, BigInteger _amount) {
        final Function function = new Function(
                FUNC_DEPOSITTOKENS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addressToDeposit), 
                new org.web3j.abi.datatypes.generated.Uint256(_amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> GetAverageStars(String addressReviewed) {
        final Function function = new Function(FUNC_GETAVERAGESTARS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addressReviewed)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint256>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<List<String>, List<BigInteger>>> GetNCompanyReview(BigInteger start, BigInteger end, String companyAddress) {
        final Function function = new Function(FUNC_GETNCOMPANYREVIEW, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(start), 
                new org.web3j.abi.datatypes.generated.Uint256(end), 
                new org.web3j.abi.datatypes.Address(160, companyAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Uint8>>() {}));
        return new RemoteFunctionCall<Tuple2<List<String>, List<BigInteger>>>(function,
                new Callable<Tuple2<List<String>, List<BigInteger>>>() {
                    @Override
                    public Tuple2<List<String>, List<BigInteger>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<List<String>, List<BigInteger>>(
                                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                                convertToNative((List<Uint8>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Tuple3<List<String>, List<BigInteger>, List<String>>> GetNMyReview(BigInteger start, BigInteger end) {
        final Function function = new Function(FUNC_GETNMYREVIEW, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(start), 
                new org.web3j.abi.datatypes.generated.Uint256(end)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Uint8>>() {}, new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteFunctionCall<Tuple3<List<String>, List<BigInteger>, List<String>>>(function,
                new Callable<Tuple3<List<String>, List<BigInteger>, List<String>>>() {
                    @Override
                    public Tuple3<List<String>, List<BigInteger>, List<String>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<List<String>, List<BigInteger>, List<String>>(
                                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                                convertToNative((List<Uint8>) results.get(1).getValue()), 
                                convertToNative((List<Address>) results.get(2).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<String, BigInteger>> GetSpecificReview(String addressReviewed) {
        final Function function = new Function(FUNC_GETSPECIFICREVIEW, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addressReviewed)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint8>() {}));
        return new RemoteFunctionCall<Tuple2<String, BigInteger>>(function,
                new Callable<Tuple2<String, BigInteger>>() {
                    @Override
                    public Tuple2<String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> WriteAReview(String addressToReview, String review, BigInteger stars) {
        final Function function = new Function(
                FUNC_WRITEAREVIEW, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addressToReview), 
                new org.web3j.abi.datatypes.Utf8String(review), 
                new org.web3j.abi.datatypes.generated.Uint8(stars)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Trustify load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Trustify(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Trustify load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Trustify(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Trustify load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Trustify(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Trustify load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Trustify(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Trustify> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String coinAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, coinAddress)));
        return deployRemoteCall(Trustify.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<Trustify> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String coinAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, coinAddress)));
        return deployRemoteCall(Trustify.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Trustify> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String coinAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, coinAddress)));
        return deployRemoteCall(Trustify.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Trustify> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String coinAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, coinAddress)));
        return deployRemoteCall(Trustify.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
