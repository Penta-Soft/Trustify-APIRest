package com.example.Trustifyrest;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class Trustify extends Contract {
    public static final String BINARY = "60806040523480156200001157600080fd5b5060405162003ca338038062003ca38339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b613b79806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bba27d911161005b578063bba27d9114610140578063da4a48f91461015c578063e3a6e26d1461017a578063fd687f4f1461019657610088565b80631fc44b191461008d5780632251c715146100a95780634f1d5bce146100dc578063932dd7b21461010e575b600080fd5b6100a760048036038101906100a291906125ef565b6101c6565b005b6100c360048036038101906100be9190612652565b61031e565b6040516100d3949392919061296d565b60405180910390f35b6100f660048036038101906100f191906129ce565b610a12565b60405161010593929190612a21565b60405180910390f35b610128600480360381019061012391906125ef565b61101a565b60405161013793929190612ac6565b60405180910390f35b61015a60048036038101906101559190612c6c565b6112b8565b005b610164611b8b565b6040516101719190612cea565b60405180910390f35b610194600480360381019061018f9190612d05565b611c2f565b005b6101b060048036038101906101ab91906125ef565b611eb1565b6040516101bd9190612e03565b60405180910390f35b6002600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160026101000a81548160ff0219169083600281111561026c5761026b612e25565b5b021790555060028060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160026101000a81548160ff0219169083600281111561031657610315612e25565b5b021790555050565b6060806060806000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490509050600081116103b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a890612ec6565b60405180910390fd5b80806103bc90612f15565b91505080871115610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f990612fb0565b60405180910390fd5b85871115610445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043c90613042565b60405180910390fd5b601987876104539190613062565b1115610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90613108565b60405180910390fd5b808611156104a0578095505b6000600188886104b09190613062565b6104ba9190613128565b905060008167ffffffffffffffff8111156104d8576104d7612b15565b5b60405190808252806020026020018201604052801561050b57816020015b60608152602001906001900390816104f65790505b50905060008267ffffffffffffffff81111561052a57610529612b15565b5b6040519080825280602002602001820160405280156105585781602001602082028036833780820191505090505b50905060008367ffffffffffffffff81111561057757610576612b15565b5b6040519080825280602002602001820160405280156105a55781602001602082028036833780820191505090505b50905060008467ffffffffffffffff8111156105c4576105c3612b15565b5b6040519080825280602002602001820160405280156105f757816020015b60608152602001906001900390816105e25790505b50905060008060018e8961060b9190613062565b6106159190613128565b90505b60018d896106269190613062565b6106309190613128565b81106109f5576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001016000826000016001856106909190613062565b815481106106a1576106a061315c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610714906131ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610740906131ba565b801561078d5780601f106107625761010080835404028352916020019161078d565b820191906000526020600020905b81548152906001019060200180831161077057829003601f168201915b50505050508784815181106107a5576107a461315c565b5b6020026020010181905250806001016000826000016001856107c79190613062565b815481106107d8576107d761315c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff168684815181106108615761086061315c565b5b602002602001019060ff16908160ff1681525050806000016001836108869190613062565b815481106108975761089661315c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168584815181106108d5576108d461315c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506109b5816001016000836000016001866109299190613062565b8154811061093a5761093961315c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160029054906101000a900460ff166120e6565b8484815181106109c8576109c761315c565b5b602002602001018190525082806109de906131eb565b9350505080806109ed90612f15565b915050610618565b50848484849a509a509a509a505050505050505092959194509250565b60608060606000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050905060008111610aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9b906132a5565b60405180910390fd5b8080610aaf90612f15565b91505080871115610af5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aec90612fb0565b60405180910390fd5b85871115610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f90613042565b60405180910390fd5b60198787610b469190613062565b1115610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e90613108565b60405180910390fd5b80861115610b93578095505b600060018888610ba39190613062565b610bad9190613128565b905060008167ffffffffffffffff811115610bcb57610bca612b15565b5b604051908082528060200260200182016040528015610bfe57816020015b6060815260200190600190039081610be95790505b50905060008267ffffffffffffffff811115610c1d57610c1c612b15565b5b604051908082528060200260200182016040528015610c4b5781602001602082028036833780820191505090505b50905060008367ffffffffffffffff811115610c6a57610c69612b15565b5b604051908082528060200260200182016040528015610c9d57816020015b6060815260200190600190039081610c885790505b50905060008060018d88610cb19190613062565b610cbb9190613128565b90505b60018c88610ccc9190613062565b610cd69190613128565b8110611001576000600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600101600082600001600185610d369190613062565b81548110610d4757610d4661315c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610dba906131ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610de6906131ba565b8015610e335780601f10610e0857610100808354040283529160200191610e33565b820191906000526020600020905b815481529060010190602001808311610e1657829003601f168201915b5050505050868481518110610e4b57610e4a61315c565b5b602002602001018190525080600101600082600001600185610e6d9190613062565b81548110610e7e57610e7d61315c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16858481518110610f0757610f0661315c565b5b602002602001019060ff16908160ff1681525050610fc181600101600083600001600186610f359190613062565b81548110610f4657610f4561315c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160029054906101000a900460ff166120e6565b848481518110610fd457610fd361315c565b5b60200260200101819052508280610fea906131eb565b935050508080610ff990612f15565b915050610cbe565b5083838398509850985050505050505093509350939050565b6060600060606000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16905060008160ff16036110fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f190613337565b60405180910390fd5b6000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054611189906131ba565b80601f01602080910402602001604051908101604052809291908181526020018280546111b5906131ba565b80156112025780601f106111d757610100808354040283529160200191611202565b820191906000526020600020905b8154815290600101906020018083116111e557829003601f168201915b5050505050905060006112a3600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160029054906101000a900460ff166120e6565b90508183829550955095505050509193909250565b82600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16611388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137f906133c9565b60405180910390fd5b60008260ff1611801561139f575060058260ff1611155b6113de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d59061345b565b60405180910390fd5b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461147a906131ba565b80601f01602080910402602001604051908101604052809291908181526020018280546114a6906131ba565b80156114f35780601f106114c8576101008083540402835291602001916114f3565b820191906000526020600020905b8154815290600101906020018083116114d657829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff16600281111561155957611558612e25565b5b600281111561156b5761156a612e25565b5b8152505090506000816020015160ff1614801561158d57506000816000015151145b1561193057600060405180608001604052808681526020018560ff168152602001600115158152602001600060028111156115cb576115ca612e25565b5b815250905080600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816116659190613627565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff021916908360028111156116d2576116d1612e25565b5b0217905550905050600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816118129190613627565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff0219169083600281111561187f5761187e612e25565b5b0217905550905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001869080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050611b84565b600060405180608001604052808681526020018560ff1681526020016001151581526020016001600281111561196957611968612e25565b5b815250905080600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611a039190613627565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff02191690836002811115611a7057611a6f612e25565b5b021790555090505080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611b0d9190613627565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff02191690836002811115611b7a57611b79612e25565b5b0217905550905050505b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611be9929190613708565b602060405180830381865afa158015611c06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2a9190613746565b905090565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611c8b929190613708565b602060405180830381865afa158015611ca8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccc9190613746565b1015611d0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d04906137bf565b60405180910390fd5b6040518060800160405280604051806020016040528060008152508152602001600060ff16815260200160011515815260200160006002811115611d5457611d53612e25565b5b815250600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611deb9190613627565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff02191690836002811115611e5857611e57612e25565b5b0217905550905050611ead33838360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612260909392919063ffffffff16565b5050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050905060008103611f40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f3790613877565b60405180910390fd5b60008167ffffffffffffffff811115611f5c57611f5b612b15565b5b604051908082528060200260200182016040528015611f8a5781602001602082028036833780820191505090505b50905060005b828110156120db57600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000183815481106120305761202f61315c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1660ff168282815181106120bc576120bb61315c565b5b60200260200101818152505080806120d3906131eb565b915050611f90565b508092505050919050565b6060600060028111156120fc576120fb612e25565b5b82600281111561210f5761210e612e25565b5b03612151576040518060400160405280600681526020017f4143544956450000000000000000000000000000000000000000000000000000815250905061225b565b6001600281111561216557612164612e25565b5b82600281111561217857612177612e25565b5b036121ba576040518060400160405280600881526020017f4d4f444946494544000000000000000000000000000000000000000000000000815250905061225b565b6002808111156121cd576121cc612e25565b5b8260028111156121e0576121df612e25565b5b03612222576040518060400160405280600781526020017f44454c4554454400000000000000000000000000000000000000000000000000815250905061225b565b6040518060400160405280600781526020017f554e4b4e4f574e0000000000000000000000000000000000000000000000000081525090505b919050565b6122e3846323b872dd60e01b85858560405160240161228193929190613897565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506122e9565b50505050565b600061234b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166123b09092919063ffffffff16565b90506000815111156123ab578080602001905181019061236b9190613906565b6123aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123a1906139a5565b60405180910390fd5b5b505050565b60606123bf84846000856123c8565b90509392505050565b60608247101561240d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240490613a37565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516124369190613a9e565b60006040518083038185875af1925050503d8060008114612473576040519150601f19603f3d011682016040523d82523d6000602084013e612478565b606091505b509150915061248987838387612495565b92505050949350505050565b606083156124f75760008351036124ef576124af8561250a565b6124ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124e590613b01565b60405180910390fd5b5b829050612502565b612501838361252d565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156125405781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125749190613b21565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006125bc82612591565b9050919050565b6125cc816125b1565b81146125d757600080fd5b50565b6000813590506125e9816125c3565b92915050565b60006020828403121561260557612604612587565b5b6000612613848285016125da565b91505092915050565b6000819050919050565b61262f8161261c565b811461263a57600080fd5b50565b60008135905061264c81612626565b92915050565b6000806040838503121561266957612668612587565b5b60006126778582860161263d565b92505060206126888582860161263d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156126f85780820151818401526020810190506126dd565b60008484015250505050565b6000601f19601f8301169050919050565b6000612720826126be565b61272a81856126c9565b935061273a8185602086016126da565b61274381612704565b840191505092915050565b600061275a8383612715565b905092915050565b6000602082019050919050565b600061277a82612692565b612784818561269d565b935083602082028501612796856126ae565b8060005b858110156127d257848403895281516127b3858261274e565b94506127be83612762565b925060208a0199505060018101905061279a565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060ff82169050919050565b61282681612810565b82525050565b6000612838838361281d565b60208301905092915050565b6000602082019050919050565b600061285c826127e4565b61286681856127ef565b935061287183612800565b8060005b838110156128a2578151612889888261282c565b975061289483612844565b925050600181019050612875565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6128e4816125b1565b82525050565b60006128f683836128db565b60208301905092915050565b6000602082019050919050565b600061291a826128af565b61292481856128ba565b935061292f836128cb565b8060005b8381101561296057815161294788826128ea565b975061295283612902565b925050600181019050612933565b5085935050505092915050565b60006080820190508181036000830152612987818761276f565b9050818103602083015261299b8186612851565b905081810360408301526129af818561290f565b905081810360608301526129c3818461276f565b905095945050505050565b6000806000606084860312156129e7576129e6612587565b5b60006129f58682870161263d565b9350506020612a068682870161263d565b9250506040612a17868287016125da565b9150509250925092565b60006060820190508181036000830152612a3b818661276f565b90508181036020830152612a4f8185612851565b90508181036040830152612a63818461276f565b9050949350505050565b600082825260208201905092915050565b6000612a89826126be565b612a938185612a6d565b9350612aa38185602086016126da565b612aac81612704565b840191505092915050565b612ac081612810565b82525050565b60006060820190508181036000830152612ae08186612a7e565b9050612aef6020830185612ab7565b8181036040830152612b018184612a7e565b9050949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612b4d82612704565b810181811067ffffffffffffffff82111715612b6c57612b6b612b15565b5b80604052505050565b6000612b7f61257d565b9050612b8b8282612b44565b919050565b600067ffffffffffffffff821115612bab57612baa612b15565b5b612bb482612704565b9050602081019050919050565b82818337600083830152505050565b6000612be3612bde84612b90565b612b75565b905082815260208101848484011115612bff57612bfe612b10565b5b612c0a848285612bc1565b509392505050565b600082601f830112612c2757612c26612b0b565b5b8135612c37848260208601612bd0565b91505092915050565b612c4981612810565b8114612c5457600080fd5b50565b600081359050612c6681612c40565b92915050565b600080600060608486031215612c8557612c84612587565b5b6000612c93868287016125da565b935050602084013567ffffffffffffffff811115612cb457612cb361258c565b5b612cc086828701612c12565b9250506040612cd186828701612c57565b9150509250925092565b612ce48161261c565b82525050565b6000602082019050612cff6000830184612cdb565b92915050565b60008060408385031215612d1c57612d1b612587565b5b6000612d2a858286016125da565b9250506020612d3b8582860161263d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612d7a8161261c565b82525050565b6000612d8c8383612d71565b60208301905092915050565b6000602082019050919050565b6000612db082612d45565b612dba8185612d50565b9350612dc583612d61565b8060005b83811015612df6578151612ddd8882612d80565b9750612de883612d98565b925050600181019050612dc9565b5085935050505092915050565b60006020820190508181036000830152612e1d8184612da5565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f596f752068617665206e6f742072656c656173656420616e792072657669657760008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612eb0602183612a6d565b9150612ebb82612e54565b604082019050919050565b60006020820190508181036000830152612edf81612ea3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612f208261261c565b915060008203612f3357612f32612ee6565b5b600182039050919050565b7f5374617274206d757374206265206c657373207468616e20746865206c656e6760008201527f7468206f66207468652061727261790000000000000000000000000000000000602082015250565b6000612f9a602f83612a6d565b9150612fa582612f3e565b604082019050919050565b60006020820190508181036000830152612fc981612f8d565b9050919050565b7f5374617274206e756d626572206d757374206265206c657373207468616e206560008201527f6e64000000000000000000000000000000000000000000000000000000000000602082015250565b600061302c602283612a6d565b915061303782612fd0565b604082019050919050565b6000602082019050818103600083015261305b8161301f565b9050919050565b600061306d8261261c565b91506130788361261c565b92508282039050818111156130905761308f612ee6565b5b92915050565b7f596f752063616e20676574206d6178203235207265766965777320706572206360008201527f616c6c0000000000000000000000000000000000000000000000000000000000602082015250565b60006130f2602383612a6d565b91506130fd82613096565b604082019050919050565b60006020820190508181036000830152613121816130e5565b9050919050565b60006131338261261c565b915061313e8361261c565b925082820190508082111561315657613155612ee6565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806131d257607f821691505b6020821081036131e5576131e461318b565b5b50919050565b60006131f68261261c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361322857613227612ee6565b5b600182019050919050565b7f5468697320636f6d70616e792068617665206e6f74207265636569766564206160008201527f6e79207265766965777300000000000000000000000000000000000000000000602082015250565b600061328f602a83612a6d565b915061329a82613233565b604082019050919050565b600060208201905081810360008301526132be81613282565b9050919050565b7f596f752068617665206e6f742072656c656173656420616e792072657669657760008201527f7320746f20746869732061646472657373000000000000000000000000000000602082015250565b6000613321603183612a6d565b915061332c826132c5565b604082019050919050565b6000602082019050818103600083015261335081613314565b9050919050565b7f596f7520646f6e7420686176652061207472616e736c616374696f6e2066726f60008201527f6d20796f7572206164647265737320746f207468697320616464726573730000602082015250565b60006133b3603e83612a6d565b91506133be82613357565b604082019050919050565b600060208201905081810360008301526133e2816133a6565b9050919050565b7f4572726f722c207374617273206d75737420626520612076616c75652062657460008201527f7765656e203020616e6420350000000000000000000000000000000000000000602082015250565b6000613445602c83612a6d565b9150613450826133e9565b604082019050919050565b6000602082019050818103600083015261347481613438565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826134a0565b6134e786836134a0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061352461351f61351a8461261c565b6134ff565b61261c565b9050919050565b6000819050919050565b61353e83613509565b61355261354a8261352b565b8484546134ad565b825550505050565b600090565b61356761355a565b613572818484613535565b505050565b5b818110156135965761358b60008261355f565b600181019050613578565b5050565b601f8211156135db576135ac8161347b565b6135b584613490565b810160208510156135c4578190505b6135d86135d085613490565b830182613577565b50505b505050565b600082821c905092915050565b60006135fe600019846008026135e0565b1980831691505092915050565b600061361783836135ed565b9150826002028217905092915050565b613630826126be565b67ffffffffffffffff81111561364957613648612b15565b5b61365382546131ba565b61365e82828561359a565b600060209050601f831160018114613691576000841561367f578287015190505b613689858261360b565b8655506136f1565b601f19841661369f8661347b565b60005b828110156136c7578489015182556001820191506020850194506020810190506136a2565b868310156136e457848901516136e0601f8916826135ed565b8355505b6001600288020188555050505b505050505050565b613702816125b1565b82525050565b600060408201905061371d60008301856136f9565b61372a60208301846136f9565b9392505050565b60008151905061374081612626565b92915050565b60006020828403121561375c5761375b612587565b5b600061376a84828501613731565b91505092915050565b7f4572726f72207769746820746f6b656e20616c6c6f77616e6365000000000000600082015250565b60006137a9601a83612a6d565b91506137b482613773565b602082019050919050565b600060208201905081810360008301526137d88161379c565b9050919050565b7f5468697320636f6d70616e7920686173206e6f7420726563656976656420616e60008201527f7920726576696577732c2063616e6e6f742063616c63756c617465206176657260208201527f6167652073746172730000000000000000000000000000000000000000000000604082015250565b6000613861604983612a6d565b915061386c826137df565b606082019050919050565b6000602082019050818103600083015261389081613854565b9050919050565b60006060820190506138ac60008301866136f9565b6138b960208301856136f9565b6138c66040830184612cdb565b949350505050565b60008115159050919050565b6138e3816138ce565b81146138ee57600080fd5b50565b600081519050613900816138da565b92915050565b60006020828403121561391c5761391b612587565b5b600061392a848285016138f1565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061398f602a83612a6d565b915061399a82613933565b604082019050919050565b600060208201905081810360008301526139be81613982565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000613a21602683612a6d565b9150613a2c826139c5565b604082019050919050565b60006020820190508181036000830152613a5081613a14565b9050919050565b600081519050919050565b600081905092915050565b6000613a7882613a57565b613a828185613a62565b9350613a928185602086016126da565b80840191505092915050565b6000613aaa8284613a6d565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613aeb601d83612a6d565b9150613af682613ab5565b602082019050919050565b60006020820190508181036000830152613b1a81613ade565b9050919050565b60006020820190508181036000830152613b3b8184612a7e565b90509291505056fea26469706673582212201583497a6648ef423fd14af5e944b48ebed609289f45341df42b132c2f810d3364736f6c63430008110033";

    public static final String FUNC_CHECKALLOWANCE = "CheckAllowance";

    public static final String FUNC_DELETEREVIEW = "DeleteReview";

    public static final String FUNC_DEPOSITTOKENS = "DepositTokens";

    public static final String FUNC_GETAVERAGESTARS = "GetAverageStars";

    public static final String FUNC_GETNCOMPANYREVIEW = "GetNCompanyReview";

    public static final String FUNC_GETNMYREVIEW = "GetNMyReview";

    public static final String FUNC_GETSPECIFICREVIEW = "GetSpecificReview";

    public static final String FUNC_WRITEAREVIEW = "WriteAReview";

    @Deprecated
    protected Trustify(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Trustify(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Trustify(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Trustify(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<BigInteger> CheckAllowance() {
        final Function function = new Function(FUNC_CHECKALLOWANCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> DeleteReview(String reviewAddress) {
        final Function function = new Function(
                FUNC_DELETEREVIEW, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, reviewAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> DepositTokens(String addressToDeposit, BigInteger amount) {
        final Function function = new Function(
                FUNC_DEPOSITTOKENS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addressToDeposit), 
                new org.web3j.abi.datatypes.generated.Uint256(amount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> GetAverageStars(String addressReviewed) {
        final Function function = new Function(FUNC_GETAVERAGESTARS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addressReviewed)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint256>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Tuple3<List<String>, List<BigInteger>, List<String>>> GetNCompanyReview(BigInteger start, BigInteger end, String companyAddress) {
        final Function function = new Function(FUNC_GETNCOMPANYREVIEW, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(start), 
                new org.web3j.abi.datatypes.generated.Uint256(end), 
                new org.web3j.abi.datatypes.Address(160, companyAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Uint8>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteFunctionCall<Tuple3<List<String>, List<BigInteger>, List<String>>>(function,
                new Callable<Tuple3<List<String>, List<BigInteger>, List<String>>>() {
                    @Override
                    public Tuple3<List<String>, List<BigInteger>, List<String>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<List<String>, List<BigInteger>, List<String>>(
                                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                                convertToNative((List<Uint8>) results.get(1).getValue()), 
                                convertToNative((List<Utf8String>) results.get(2).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Tuple4<List<String>, List<BigInteger>, List<String>, List<String>>> GetNMyReview(BigInteger start, BigInteger end) {
        final Function function = new Function(FUNC_GETNMYREVIEW, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(start), 
                new org.web3j.abi.datatypes.generated.Uint256(end)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Uint8>>() {}, new TypeReference<DynamicArray<Address>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteFunctionCall<Tuple4<List<String>, List<BigInteger>, List<String>, List<String>>>(function,
                new Callable<Tuple4<List<String>, List<BigInteger>, List<String>, List<String>>>() {
                    @Override
                    public Tuple4<List<String>, List<BigInteger>, List<String>, List<String>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<List<String>, List<BigInteger>, List<String>, List<String>>(
                                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                                convertToNative((List<Uint8>) results.get(1).getValue()), 
                                convertToNative((List<Address>) results.get(2).getValue()), 
                                convertToNative((List<Utf8String>) results.get(3).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Tuple3<String, BigInteger, String>> GetSpecificReview(String addressReviewed) {
        final Function function = new Function(FUNC_GETSPECIFICREVIEW, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addressReviewed)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint8>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple3<String, BigInteger, String>>(function,
                new Callable<Tuple3<String, BigInteger, String>>() {
                    @Override
                    public Tuple3<String, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, BigInteger, String>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> WriteAReview(String addressToReview, String text, BigInteger stars) {
        final Function function = new Function(
                FUNC_WRITEAREVIEW, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addressToReview), 
                new org.web3j.abi.datatypes.Utf8String(text), 
                new org.web3j.abi.datatypes.generated.Uint8(stars)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Trustify load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Trustify(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Trustify load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Trustify(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Trustify load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Trustify(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Trustify load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Trustify(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Trustify> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String coinAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, coinAddress)));
        return deployRemoteCall(Trustify.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<Trustify> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String coinAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, coinAddress)));
        return deployRemoteCall(Trustify.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Trustify> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String coinAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, coinAddress)));
        return deployRemoteCall(Trustify.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Trustify> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String coinAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, coinAddress)));
        return deployRemoteCall(Trustify.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
